{"data":{"site":{"siteMetadata":{"title":"X@L[dot]com","author":"Xavier Lozinguez"}},"markdownRemark":{"id":"699af063-9166-5b55-9eba-c48226f09d12","excerpt":"These are some notes in case you are interested in getting your site up and running on  Github Pages  using  Gatsby . Gatsby? Gatsby  combines the power of…","html":"<p>These are some notes in case you are interested in getting your site up and running on <a href=\"https://pages.github.com/\">Github Pages</a> using <a href=\"https://www.gatsbyjs.org/\">Gatsby</a>.</p>\n<h1>Gatsby?</h1>\n<p><a href=\"https://www.gatsbyjs.org/\">Gatsby</a> combines the power of <a href=\"https://reactjs.org\">React</a>, <a href=\"http://graphql.org/\">GraphQL</a> and <a href=\"https://webpack.js.org/\">Webpack</a> to make publishing your own static PWA a breeze. Combine it with the generous and robust static site host (<a href=\"https://pages.github.com/\">Github Pages</a>, <a href=\"https://www.netlify.com/\">Netlify</a>…) and you can deploy your site in a few minutes with minimal associated cost.</p>\n<blockquote>\n<p>The origin of this blog post comes from the great <a href=\"https://egghead.io/courses/build-a-blog-with-react-and-markdown-using-gatsby\">Egghead.io tutorial by Taylor Bell</a>.</p>\n<p>You can also find great resources in the <a href=\"https://www.gatsbyjs.org/docs/\">Gatsby’s documentation</a>.</p>\n</blockquote>\n<h1>The Gameplan</h1>\n<ol>\n<li>\n<p>Install Gatsby <code class=\"language-text\">npm install --global gatsby-cli</code></p>\n</li>\n<li>\n<p>Create a new site:</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">gatsby new gatsby-site\ncd gatsby-site\ngatsby develop</code></pre></div>\n<p>Gatsby will start a hot-reloading development environment accessible at <code class=\"language-text\">localhost:8000</code></p>\n</li>\n<li>\n<p>If you want to use markdown as an editor system, install the following plugins:</p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">yarn add gatsby-source-filesystem --save\nyarn add gatsby-tranformer-remark --save</code></pre></div>\n<p>Then configure the plugins in the <code class=\"language-text\">gatsby-config.js</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token template-string\"><span class=\"token string\">`gatsby-plugin-react-helmet`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\"><span class=\"token string\">`gatsby-transformer-remark`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    resolve<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`gatsby-source-filesystem`</span></span><span class=\"token punctuation\">,</span>\n    options<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      name<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`src`</span></span><span class=\"token punctuation\">,</span>\n      path<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/src`</span></span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>This will set <code class=\"language-text\">src</code> as the root path for your application files. </p>\n</li>\n<li>\n<p>In <code class=\"language-text\">src/pages</code> you can place your folders in which you can add your <code class=\"language-text\">index.md</code> markdown files. You can name each folder with <code class=\"language-text\">YEAR-MONTH-DAY-SLUG</code>. At the top of the<code class=\"language-text\">index.md</code> file of each pages folder, add a snippet as such:</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token hr punctuation\">---</span>\npath: \"/YEAR-MONTH-DAY-SLUG\"\ndate: \"TIMESTAMP\"\ntitle: \"Lorem ipsum\"\n<span class=\"token title important\">excerpt: \"Dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n<span class=\"token punctuation\">---</span></span></code></pre></div>\n</li>\n<li>\n<p>in <code class=\"language-text\">src/page/index.js</code>, create a proper GraphQL query to provide access to the collection of pages within the <code class=\"language-text\">src/pages</code> folder. The query in our case would look like:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">IndexPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> edges<span class=\"token punctuation\">:</span> posts <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>allMarkdownRemark<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hi people<span class=\"token punctuation\">,</span> check my stuff out<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span> \n        posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> node<span class=\"token punctuation\">:</span> post <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> frontmatter <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> post<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>div key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">.</span>date <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">.</span>path <span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                  <span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">.</span>title <span class=\"token punctuation\">}</span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span><span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">.</span>date <span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>b<span class=\"token operator\">></span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">.</span>excerpt <span class=\"token punctuation\">}</span>\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\n  query Indexquery {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id,\n          frontmatter {\n            title\n            date(formatString: \"MMM DD, 'YY\")\n            path\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`</span></span></code></pre></div>\n</li>\n<li>\n<p>Finally, create your post template to display your content. In <code class=\"language-text\">templates/blog-post.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-link'</span>\n<span class=\"token keyword\">import</span> Helmet <span class=\"token keyword\">from</span> <span class=\"token string\">'react-helmet'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Template</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> markdownRemark<span class=\"token punctuation\">:</span> post <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> data\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> frontmatter<span class=\"token punctuation\">,</span> html <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> post\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Helmet title<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> - My Blog`</span></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>date<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n\n        <span class=\"token operator\">&lt;</span>div dangerouslySetInnerHTML<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>__html<span class=\"token punctuation\">:</span> html<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> pageQuery <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token string\">`\nquery BlogPostByPath($path: String!) {\n  markdownRemark(frontmatter: { path: { eq: $path } }) {\n    html \n    frontmatter {\n      title\n      date(formatString: \"MMMM, DD, YYYY\")\n      path\n      tags\n      excerpt\n    }\n  }\n}\n`</span></span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Template</code></pre></div>\n</li>\n<li>\n<p>Hook your template and your graphql query. In <code class=\"language-text\">gatsby-node.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nexports<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">createPages</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> boundActionCreators<span class=\"token punctuation\">,</span> graphql <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createPage <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> boundActionCreators<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> blogPostTemplate <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src/templates/blog-post.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span>\n    <span class=\"token template-string\"><span class=\"token string\">`{\n      allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___date] }) {\n        edges {\n          node {\n            html\n            id\n            frontmatter {\n              date\n              path\n              title\n              excerpt\n              tags\n            }\n          }\n        }\n      }\n    }`</span></span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>errors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>allMarkdownRemark<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">;</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`There are </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>posts<span class=\"token punctuation\">.</span>length<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> post(s)`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    posts<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">createPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        path<span class=\"token punctuation\">:</span> node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">,</span>\n        component<span class=\"token punctuation\">:</span> blogPostTemplate<span class=\"token punctuation\">,</span>\n        context<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          prev<span class=\"token punctuation\">:</span> index <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">:</span> posts<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">,</span>\n          next<span class=\"token punctuation\">:</span> index <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span>posts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">:</span> posts<span class=\"token punctuation\">[</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>node\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p>Deploy your site to Github:</p>\n</li>\n<li>\n<p>Install <code class=\"language-text\">gh-pages</code>: </p>\n<div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">yarn add --dev gh-pages</code></pre></div>\n</li>\n<li>\n<p>Create a new project on github and set up the <code class=\"language-text\">pathPrefix</code> of the <code class=\"language-text\">gatsby-config</code> file accordingly:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">module.exports = <span class=\"token punctuation\">{</span>\npathPrefix<span class=\"token operator\">:</span> `/my-github-project-name`<span class=\"token punctuation\">,</span>\n...</code></pre></div>\n</li>\n<li>\n<p>Hook the <code class=\"language-text\">deploy</code> command in your npm <code class=\"language-text\">package.json</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">...\n<span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n...\n<span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby build --prefix-paths &amp;&amp; gh-pages -d public\"</span><span class=\"token punctuation\">,</span>\n...\n<span class=\"token punctuation\">}</span>\n...</code></pre></div>\n</li>\n</ol>\n<h1>Other Gatsby commands:</h1>\n<ul>\n<li><code class=\"language-text\">gatsby build</code> — Gatsby will perform an optimized production build for your site generating static HTML and per-route JavaScript code bundles.</li>\n<li><code class=\"language-text\">gatsby serve</code> — Gatsby starts a local HTML server for testing your built site.</li>\n</ul>\n<blockquote>\n<p>Lots of great resources in the Gatsby <a href=\"https://www.gatsbyjs.org/docs\">docs</a> and <a href=\"https://www.gatsbyjs.org/docs/awesome-gatsby/\">community pages</a>.</p>\n</blockquote>","frontmatter":{"title":"Getting started with Gatsby","date":"January 28, 2018"}}},"pageContext":{"slug":"/2018-01-28-getting-started-with-gatsby/","previous":{"fields":{"slug":"/2017-12-01-no-heroes/"},"frontmatter":{"title":"No Heroes"}},"next":null}}